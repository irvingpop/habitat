---
title: Habitat - Build Your WebApp with Habitat
---

section
  h1 Build Your Web App with Habitat

  p If you have gone through the #{link_to 'Build a Sample App tutorial', '/tutorials/sample-app/'}, we used Habitat to package up a small Ruby-on-Rails web application and connect it to a PostgreSQL database. This guide explores more about how to use the Ruby scaffolding to get your web application packaged and running quickly with Habitat. It also explores how you can extend and customize your Habitat package based on some of the common overrides to the default scaffolding behavior. For the complete reference on how to use the Ruby scaffolding, see the  #{link_to 'reference topic', 'https://github.com/habitat-sh/core-plans/blob/master/scaffolding-ruby/doc/reference.md'} that accomplanies the Ruby scaffolding.

  p This guide assumes that you have a Ruby web app already created and the examples shown in this guide are for Ruby web applications that connect to a PostgreSQL database.

  p If your web application is not a Ruby-based application, please see the #{link_to 'Create Packages', '/docs/create-packages-overview/'} section of the reference documentation for information on how to create a plan from scratch.

  h2 Prerequisites

  p #{link_to 'Download and Install', '/tutorials/download/'} the Habitat CLI (command-line interface) on your workstation. You should complete all steps before doing any local development work with the CLI.

  p The Ruby scaffolding requires a Gemfile in your project directory, so if you are building a Sinatra web app, you need to have a Gemfile present in your project repo.

  blockquote
   p <b>Important</b> If you have the gem <code>tzinfo-data</code> referenced in your Gemfile, it is important that you remove any platform-specific attributes from the gem declaration. Your reference should simply look like the following:

   pre
    code gem 'tzinfo-data'


= link_to 'Next: Create Your Plan', '/tutorials/build-your-own/create-plan/', class: 'button cta'