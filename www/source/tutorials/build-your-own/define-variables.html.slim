---
title: Habitat - Define Environment Variables
---

section
 h1 Define environment variables

 p Through associative arrays, you can define additional application variables in your plan.sh file. For example, to define additional application variables, you would add items to the <code>scaffolding_env</code>. 

 pre
  code
   |
    declare -A scaffolding_env

    # Add additional variables which use runtime config values
    scaffolding_env[AWS_DEFAULT_REGION]="{{cfg.aws_default_region}}"
    scaffolding_env[USER_LOGIN_PATH]="{{cfg.user_login_path}}"
    # Add addition variable which is hardcoded at build time
    scaffolding_env[MY_PKG_VERSION]="$pkg_version/$pkg_release"

 blockquote
  p <b>Note</b> All app environment variable values which use handlebars templating will be computed and rendered by the supervisor at run time.
 
 p By default, the Ruby scaffolding creates the following items in the <code>scaffolding_env</code> array for you:

 pre
  code
   |
    scaffolding_env LANG "{{cfg.lang}}"
    scaffolding_env PORT "{{cfg.app.port}}"

 p p If you are packaging up a Rails app v4.1 or later, the following additional items will be added to your <code>scaffolding_env</code> array:

 pre
  code
   | 
    scaffolding_env RAILS_ENV "{{cfg.rails_env}}
    scaffolding_env RACK_ENV "{{cfg.rack_env}}
    scaffolding_env RAILS_LOG_TO_STDOUT "enabled" (only if your railties gem is v5.0.0 or later)
    scaffolding_env RAILS_SERVE_STATIC_FILES "enabled" (only if your railties gem is v4.2.0 or later)
    scaffolding_env SECRET_KEY_BASE "{{cfg.secret_key_base}}

 blockquote
  p <b>Note</b> If your app type is strictly a Rack web server, then only the <code>RACK_ENV</code> environment variable will be added by default.
    

 = link_to 'Next: Define Dependencies', '/tutorials/build-your-own/define-dependencies-callbacks/', class: 'button cta'